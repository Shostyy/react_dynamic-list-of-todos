{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","setTodo","modalTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","filter","setQuery","setFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","clearModal","useState","isLoading","setIsLoading","author","setAuthor","useEffect","userId","response","finally","href","email","name","App","todoList","setTodoList","hasLoader","setHasLoader","setModalTodo","preparedTodos","useMemo","filteredList","length","toLowerCase","includes","item","newQuery","newFilter","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98492814.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  setTodo: (todo: Todo | undefined) => void;\n  modalTodo: Todo | undefined;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  setTodo,\n  modalTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              key={todo.id}\n              onClick={() => setTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': !modalTodo,\n                  'fa-eye-slash': modalTodo && modalTodo.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface TodoFilterProps {\n  query: string;\n  filter: string;\n  setQuery: (query: string) => void;\n  setFilter: (filter: string) => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  query,\n  filter,\n  setQuery,\n  setFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n            setFilter(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {!!query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo;\n  clearModal: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  clearModal,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [author, setAuthor] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((response) => setAuthor(response))\n      .finally(() => setIsLoading(false));\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={author?.email}>\n                {author?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [hasLoader, setHasLoader] = useState(false);\n  const [modalTodo, setModalTodo] = useState<Todo>();\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    setHasLoader(true);\n    getTodos()\n      .then((response) => setTodoList(response))\n      .finally(() => {\n        setHasLoader(false);\n      });\n  }, []);\n\n  const preparedTodos: Todo[] = useMemo(() => {\n    let filteredList: Todo[];\n\n    if (query.length) {\n      filteredList = todoList.filter((todo) => {\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n      });\n    } else {\n      filteredList = todoList;\n    }\n\n    switch (filter) {\n      case 'active':\n        return filteredList.filter(item => !item.completed);\n\n      case 'completed':\n        return filteredList.filter(item => item.completed);\n\n      default:\n        return filteredList;\n    }\n  }, [query, filter, todoList]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                setQuery={(newQuery) => setQuery(newQuery)}\n                setFilter={(newFilter) => setFilter(newFilter)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {hasLoader && <Loader />}\n              <TodoList\n                todos={preparedTodos}\n                setTodo={(todo) => setModalTodo(todo)}\n                modalTodo={modalTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo && (\n        <TodoModal\n          todo={modalTodo}\n          clearModal={() => setModalTodo(undefined)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}